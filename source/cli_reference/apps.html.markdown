
## Apps

Apps are the core data pipeline that defines the stages of processing the data. See [Quickstart - Apps](/quickstart/apps) for an overview of apps. 

  ```bash
$ zillabyte help apps

  Usage: zillabyte apps

 list custom apps
 --output_type OUTPUT_TYPE     # specify an output type i.e. json


  apps                           #  list custom apps
  apps:cycles ID [OPTIONS]       #  operations on the app's cycles (batches).
  apps:delete ID                 #  deletes an app.
  apps:details ID                #  list details for an app, including percentage complete
  apps:errors ID                 #  show recent errors generated by the app
  apps:info [DIR]                #  outputs the info for the app in the dir.
  apps:init [NAME]               #  initializes a new app
  apps:kill ID                   #  kills the given app
  apps:logs ID [OPERATION_NAME]  #  streams logs from the distributed workers
  apps:prep [DIR]                #  performs any necessary initialization for the app
  apps:pull ID DIR               #  pulls an app source to a directory.
  apps:push [DIR]                #  uploads an app
  apps:status [DIR]              #  fetches detailed status of the app
  apps:test                      #  tests a local app with sample data

  ```

### apps:cycles 

``` bash
$ zillabyte apps:cycles
Usage: zillabyte apps:cycles ID [OPTIONS]

 operations on the app cycles (batches).
 with no options, the command lists the apps cycles
 -n, --next                          # request the app to move to the next cycle
 -f, --forever                       # don't wait on cycles any more
 --output_type OUTPUT_TYPE           # specify an output type i.e. json
 ```

### apps:delete 

``` bash
$ zillabyte apps:delete
Usage: zillabyte apps:delete ID

 deletes an app. if the app is running, this command will kill it.

 -f, --force # don't ask for confirmation
 --output_type OUTPUT_TYPE # specify an output type i.e. json
```

### apps:details 

``` bash
$ zillabyte apps:details
Usage: zillabyte apps:details ID

 list details for an app, including percentage complete
 if the source is an existing relation
```

### apps:errors 

``` bash
$ zillabyte help errors
Usage: zillabyte apps:errors ID

 show recent errors generated by the app
 --output_type OUTPUT_TYPE           # specify an output type i.e. json

```

### apps:info 

``` bash
$ zillabyte apps:info
Usage: $ zillabyte apps:info [DIR]

 outputs the info for the app in the dir.

 --pretty # Pretty prints the info output
 --output_type OUTPUT_TYPE # specify an output type i.e. json
 --directory DIR # Directory of the app

```

### apps:init              
``` bash
$ zillabyte apps:init
zillabyte apps:init [NAME]

 initializes a new app

 --lang LANG  # which language to use [ruby, python]. default 'ruby'.
 --dir DIR    # target directory of the app.

Examples:

 $ zillabyte apps:init contact_extractor --lang python

```

### apps:kill    

``` bash
$ zillabyte apps:kill
Usage: zillabyte apps:kill ID

 kills the given app

 --config CONFIG_FILE # use the given config file
 --output_type OUTPUT_TYPE # specify an output type i.e. json

```

### apps:logs

``` bash
$ zillabyte apps:logs
Usage: zillabyte apps:logs ID [OPERATION_NAME]

 streams logs from the distributed workers

 --output_type OUTPUT_TYPE # specify an output type i.e. json
 --operation OPERATION_NAME # specify the operation to show logs for
 -v, --verbose LEVEL  # sets the verbosity (error, info, debug) (default: info)

```

### apps:prep

``` bash
$ zillabyte apps:prep
Usage:zillabyte apps:prep [DIR]

 performs any necessary initialization for the app

 --directory DIR       # app directory
 --output_type OUTPUT_TYPE           # specify an output type i.e. json

```

### apps:pull

``` bash
$ zillabyte apps:pull
Usage: zillabyte apps:pull ID DIR

 pulls an app source to a directory.

 --force # pulls even if the directory exists
 --output_type OUTPUT_TYPE # specify an output type i.e. json
 --directory DIR # Directory of the app

 Examples:

 $ zillabyte apps:pull .

```

### apps:status   
``` bash
$ zillabyte apps:pull
Usage: zillabyte apps:status [DIR]

 fetches detailed status of the app

 --output_type OUTPUT_TYPE # specify an output type i.e. json
 --directory DIR # Directory of the app

```

### apps:test     
``` bash
$ zillabyte apps:test
Usage: zillabyte apps:test

 tests a local app with sample data

 --config CONFIG_FILE            # use the given config file
 --output OUTPUT_FILE            # writes sink output to a file
 --cycles CYCLES                 # number of cycles to emit (default 1)
 --directory DIR                 # app directory
 -i, --interactive   # allow user to control input and read output

```




