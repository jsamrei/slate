---
title: CLI Reference Overview
---

## zillabyte CLI

The command line interface (CLI) is the primary way to interact with the Zillabyte infrastructure.  Details of each command can be viewed by running `zillabyte help COMMAND`.  The standalone `zillabyte help` command is also a quick way to see the available commands.

  ``` bash
  $ zillabyte help
  Usage: zillabyte COMMAND [command-specific-options]
  
  Primary help topics, type "zillabyte help TOPIC" for more details:
  
    apps        #  manage custom apps
    components  #  manage custom components
    query       #  executes queries
    relations   #  manage custom relations

  Additional topics:

    auth             #  manage zillabyte accounts
    executes         #  executes arbitrary input against apps
    git              #  manage git for apps
    help             #  list commands and display help
    keys             #  manage authentication keys
    repl             #  REPL console for zillabyte commands
    version          #  display version number
  
  ```

  To view more detailed descriptions of CLI functions, refer to the appropriate CLI Reference link.




### Aliases

The following aliases redirect to the commands to reduce keystrokes.

  ```bash
  $ zillabyte help aliases
Useful aliases:

login        --> auth:login          #  set the authentication token
logout       --> auth:logout         #  clear the authentication token
errors       --> apps:errors         #  show recent errors generated by the app
             --> components:errors   #  show recent errors generated by the component
info         --> apps:info           #  outputs the info for the app in the dir.
             --> components:info     #  outputs the info for the component in the dir
logs         --> apps:logs           #  streams logs from the distributed workers
             --> components:logs     #  streams logs from the distributed workers
prep         --> apps:prep           #  performs initialization for the app
             --> components:prep     #  performs initialization for the component
pull         --> apps:pull           #  pulls a app source to a directory.
             --> components:pull     #  pulls a component source to a directory.
test         --> apps:test           #  tests a local app with sample data
             --> components:test     #  tests a local component with sample data
sql          --> query:sql           #  executes queries against the zillabyte corpus
sxp          --> query:sxp           #  executes queries against the zillabyte corpus
append       --> relations:append    #  adds data to an existing relation
```

For detailed help on each alias, type `zillabyte help ALIAS`.

[HTML5 Boilerplate]: http://html5boilerplate.com/
[SMACSS]: http://smacss.com/
