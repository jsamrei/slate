---
layout: page
---
- @title = "Hello Worlds in Silicon Valley Quickstart"
- @bodyclass = "newproject"

%p
= link_to "Documentation Home", "/index.html"

%br
%br

%h2
  Hello Worlds in Silicon Valley Quickstart

%br
.code_snippet
  require 'zillabyte'

  %br
  %br

  Zillabyte.simple_function do |fn|

  %br
  %br

  \# The following matches directive instructs zillabyte to query a few tables to identify only the web pages of companies within Silicon Valley. Your function will have access to: URL, HTML, COMPANY, LAT and LNG.
  %br
  %br
  &nbsp; fn.matches [
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ["web_page", ["URL", "HTML"]
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ["company_of", ["URL", "COMPANY"]]
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ["location_of", ["COMPANY", "LAT", "LNG"]]
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ["between", ["LAT", 37.3, 37.8]]
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ["between", ["LNG", -121.8, -122.4]]
  %br
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]

  %br
  %br

  \# This directive tells Zillabyte what kind of data your function produces.  In this case, we're saying we will emit a tuple that is one-column wide and contains the field 'URL'
  %br
  %br
  &nbsp; fn.emits   [["has_hello_world", ["URL"]]]

  %br
  %br

  \# This is the heart of your algorithm.  It's processed on every web page.  This algorithm is run in parallel on possibly hundreds of machines.
  %br
  %br
  &nbsp; fn.execute do |tuple, collector|

  %br
  %br

  &nbsp; # get the fields
  %br
  %br
  &nbsp; &nbsp; url = tuple['url']
  %br
  &nbsp; &nbsp; html = tuple['html']

  %br
  %br

  &nbsp; # does this page contain the 'hello world' phrase? If so, emit it
  %br
  %br
  &nbsp; &nbsp; if html.include?('hello world')
  %br
  &nbsp; &nbsp; &nbsp; collector.emit("has_hello_world", {"url" => url})
  %br
  &nbsp; &nbsp; end

  %br
  %br

  &nbsp; end

  %br
  %br

  end
%br


%br
%br

%p
  The above code is exactly the same as in the previous Hello Worlds example except instead of matches querying from just a single table, it queries from a number of tables ("web_page", "company" and "location") and joins the results. The results are joined on the columns with the same name. The function "between" just finds all of the LAT and LNG between the specified coordinates.
